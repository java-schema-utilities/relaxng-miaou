package org.iso_relax.miaou.bta;

import java.io.*;
import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.parsers.*;
import org.w3c.dom.*;
import org.xml.sax.*;

/**
 * IBinaryTreeAutomatonFactory is generated by Relaxer based on binaryTreeAutomaton.rng.
 *
 * @version binaryTreeAutomaton.rng 1.0 (Sat Oct 19 02:26:42 JST 2002)
 * @author  Relaxer 0.17b (http://www.relaxer.org)
 */
public interface IBinaryTreeAutomatonFactory {
    /**
     * Sets a error handler to handle parsing error.
     *
     * @param handler
     */
    void setErrorHandler(org.xml.sax.ErrorHandler handler);

    /**
     * Gets a error handler to handle parsing error.
     *
     * @return org.xml.sax.ErrorHandler
     */
    org.xml.sax.ErrorHandler getErrorHandler();

    /**
     * Creates a <code>Object</code> by the File <code>file</code>.
     *
     * @param file
     * @exception IOException
     * @exception SAXException
     * @exception ParserConfigurationException
     * @return IRNode
     */
    IRNode create(File file) throws IOException, SAXException, ParserConfigurationException;

    /**
     * Creates a <code>Object</code> by the File <code>file</code>.
     *
     * @param file
     * @exception IOException
     * @exception SAXException
     * @exception ParserConfigurationException
     * @return IRNode
     */
    IRNode createWithContext(File file) throws IOException, SAXException, ParserConfigurationException;

    /**
     * Creates a <code>Object</code> by the String representation of URI <code>uri</code>.
     *
     * @param uri
     * @exception IOException
     * @exception SAXException
     * @exception ParserConfigurationException
     * @return IRNode
     */
    IRNode create(String uri) throws IOException, SAXException, ParserConfigurationException;

    /**
     * Creates a <code>Object</code> by the String representation of URI <code>uri</code>.
     *
     * @param uri
     * @exception IOException
     * @exception SAXException
     * @exception ParserConfigurationException
     * @return IRNode
     */
    IRNode createWithContext(String uri) throws IOException, SAXException, ParserConfigurationException;

    /**
     * Creates a <code>Object</code> by the URL <code>url</code>.
     *
     * @param url
     * @exception IOException
     * @exception SAXException
     * @exception ParserConfigurationException
     * @return IRNode
     */
    IRNode create(URL url) throws IOException, SAXException, ParserConfigurationException;

    /**
     * Creates a <code>Object</code> by the URL <code>url</code>.
     *
     * @param url
     * @exception IOException
     * @exception SAXException
     * @exception ParserConfigurationException
     * @return IRNode
     */
    IRNode createWithContext(URL url) throws IOException, SAXException, ParserConfigurationException;

    /**
     * Creates a <code>Object</code> by the InputStream <code>in</code>.
     *
     * @param in
     * @exception IOException
     * @exception SAXException
     * @exception ParserConfigurationException
     * @return IRNode
     */
    IRNode create(InputStream in) throws IOException, SAXException, ParserConfigurationException;

    /**
     * Creates a <code>Object</code> by the InputStream <code>in</code>.
     *
     * @param in
     * @exception IOException
     * @exception SAXException
     * @exception ParserConfigurationException
     * @return IRNode
     */
    IRNode createWithContext(InputStream in) throws IOException, SAXException, ParserConfigurationException;

    /**
     * Creates a <code>Object</code> by the InputSource <code>is</code>.
     *
     * @param is
     * @exception IOException
     * @exception SAXException
     * @exception ParserConfigurationException
     * @return IRNode
     */
    IRNode create(InputSource is) throws IOException, SAXException, ParserConfigurationException;

    /**
     * Creates a <code>Object</code> by the InputSource <code>is</code>.
     *
     * @param is
     * @exception IOException
     * @exception SAXException
     * @exception ParserConfigurationException
     * @return IRNode
     */
    IRNode createWithContext(InputSource is) throws IOException, SAXException, ParserConfigurationException;

    /**
     * Creates a <code>Object</code> by the Reader <code>reader</code>.
     *
     * @param reader
     * @exception IOException
     * @exception SAXException
     * @exception ParserConfigurationException
     * @return IRNode
     */
    IRNode create(Reader reader) throws IOException, SAXException, ParserConfigurationException;

    /**
     * Creates a <code>Object</code> by the Reader <code>reader</code>.
     *
     * @param reader
     * @exception IOException
     * @exception SAXException
     * @exception ParserConfigurationException
     * @return IRNode
     */
    IRNode createWithContext(Reader reader) throws IOException, SAXException, ParserConfigurationException;

    /**
     * Creates a <code>Object</code> by the Document <code>dom</code>.
     *
     * @param doc
     * @exception IOException
     * @exception SAXException
     * @exception ParserConfigurationException
     * @return IRNode
     */
    IRNode create(Document doc) throws IOException, SAXException, ParserConfigurationException;

    /**
     * Creates a <code>Object</code> by the Document <code>doc</code>.
     *
     * @param doc
     * @exception IOException
     * @exception SAXException
     * @exception ParserConfigurationException
     * @return IRNode
     */
    IRNode createWithContext(Document doc) throws IOException, SAXException, ParserConfigurationException;

    /**
     * Creates a <code>Object</code> by the Element <code>element</code>.
     *
     * @param element
     * @exception IOException
     * @exception SAXException
     * @exception ParserConfigurationException
     * @return IRNode
     */
    IRNode create(Element element) throws IOException, SAXException, ParserConfigurationException;

    /**
     * Creates a <code>Object</code> by the Element <code>element</code>.
     *
     * @param element
     * @exception IOException
     * @exception SAXException
     * @exception ParserConfigurationException
     * @return IRNode
     */
    IRNode createWithContext(Element element) throws IOException, SAXException, ParserConfigurationException;

    /**
     * Creates a <code>BinaryTreeAutomaton</code> by the File <code>file</code>.
     *
     * @param file
     * @exception IOException
     * @exception SAXException
     * @exception ParserConfigurationException
     * @return BinaryTreeAutomaton
     */
    BinaryTreeAutomaton createBinaryTreeAutomaton(File file) throws IOException, SAXException, ParserConfigurationException;

    /**
     * Creates a <code>FinalTransition</code> by the File <code>file</code>.
     *
     * @param file
     * @exception IOException
     * @exception SAXException
     * @exception ParserConfigurationException
     * @return FinalTransition
     */
    FinalTransition createFinalTransition(File file) throws IOException, SAXException, ParserConfigurationException;

    /**
     * Creates a <code>StartTransition</code> by the File <code>file</code>.
     *
     * @param file
     * @exception IOException
     * @exception SAXException
     * @exception ParserConfigurationException
     * @return StartTransition
     */
    StartTransition createStartTransition(File file) throws IOException, SAXException, ParserConfigurationException;

    /**
     * Creates a <code>ElementTransition</code> by the File <code>file</code>.
     *
     * @param file
     * @exception IOException
     * @exception SAXException
     * @exception ParserConfigurationException
     * @return ElementTransition
     */
    ElementTransition createElementTransition(File file) throws IOException, SAXException, ParserConfigurationException;

    /**
     * Creates a <code>TextTransition</code> by the File <code>file</code>.
     *
     * @param file
     * @exception IOException
     * @exception SAXException
     * @exception ParserConfigurationException
     * @return TextTransition
     */
    TextTransition createTextTransition(File file) throws IOException, SAXException, ParserConfigurationException;

    /**
     * Creates a <code>BranchingTransition</code> by the File <code>file</code>.
     *
     * @param file
     * @exception IOException
     * @exception SAXException
     * @exception ParserConfigurationException
     * @return BranchingTransition
     */
    BranchingTransition createBranchingTransition(File file) throws IOException, SAXException, ParserConfigurationException;

    /**
     * Creates a <code>MergingTransition</code> by the File <code>file</code>.
     *
     * @param file
     * @exception IOException
     * @exception SAXException
     * @exception ParserConfigurationException
     * @return MergingTransition
     */
    MergingTransition createMergingTransition(File file) throws IOException, SAXException, ParserConfigurationException;

    /**
     * Creates a <code>OneOrMoreAttributeTransition</code> by the File <code>file</code>.
     *
     * @param file
     * @exception IOException
     * @exception SAXException
     * @exception ParserConfigurationException
     * @return OneOrMoreAttributeTransition
     */
    OneOrMoreAttributeTransition createOneOrMoreAttributeTransition(File file) throws IOException, SAXException, ParserConfigurationException;

    /**
     * Creates a <code>NonExistentAttributeTransition</code> by the File <code>file</code>.
     *
     * @param file
     * @exception IOException
     * @exception SAXException
     * @exception ParserConfigurationException
     * @return NonExistentAttributeTransition
     */
    NonExistentAttributeTransition createNonExistentAttributeTransition(File file) throws IOException, SAXException, ParserConfigurationException;

    /**
     * Creates a <code>AtomicTransition</code> by the File <code>file</code>.
     *
     * @param file
     * @exception IOException
     * @exception SAXException
     * @exception ParserConfigurationException
     * @return AtomicTransition
     */
    AtomicTransition createAtomicTransition(File file) throws IOException, SAXException, ParserConfigurationException;

    /**
     * Creates a <code>Data</code> by the File <code>file</code>.
     *
     * @param file
     * @exception IOException
     * @exception SAXException
     * @exception ParserConfigurationException
     * @return Data
     */
    Data createData(File file) throws IOException, SAXException, ParserConfigurationException;

    /**
     * Creates a <code>Param</code> by the File <code>file</code>.
     *
     * @param file
     * @exception IOException
     * @exception SAXException
     * @exception ParserConfigurationException
     * @return Param
     */
    Param createParam(File file) throws IOException, SAXException, ParserConfigurationException;

    /**
     * Creates a <code>Value</code> by the File <code>file</code>.
     *
     * @param file
     * @exception IOException
     * @exception SAXException
     * @exception ParserConfigurationException
     * @return Value
     */
    Value createValue(File file) throws IOException, SAXException, ParserConfigurationException;

    /**
     * Creates a <code>ListTransition</code> by the File <code>file</code>.
     *
     * @param file
     * @exception IOException
     * @exception SAXException
     * @exception ParserConfigurationException
     * @return ListTransition
     */
    ListTransition createListTransition(File file) throws IOException, SAXException, ParserConfigurationException;

    /**
     * Creates a <code>BinaryTreeAutomaton</code> by the File <code>file</code>.
     *
     * @param file
     * @exception IOException
     * @exception SAXException
     * @exception ParserConfigurationException
     * @return BinaryTreeAutomaton
     */
    BinaryTreeAutomaton createBinaryTreeAutomatonWithContext(File file) throws IOException, SAXException, ParserConfigurationException;

    /**
     * Creates a <code>FinalTransition</code> by the File <code>file</code>.
     *
     * @param file
     * @exception IOException
     * @exception SAXException
     * @exception ParserConfigurationException
     * @return FinalTransition
     */
    FinalTransition createFinalTransitionWithContext(File file) throws IOException, SAXException, ParserConfigurationException;

    /**
     * Creates a <code>StartTransition</code> by the File <code>file</code>.
     *
     * @param file
     * @exception IOException
     * @exception SAXException
     * @exception ParserConfigurationException
     * @return StartTransition
     */
    StartTransition createStartTransitionWithContext(File file) throws IOException, SAXException, ParserConfigurationException;

    /**
     * Creates a <code>ElementTransition</code> by the File <code>file</code>.
     *
     * @param file
     * @exception IOException
     * @exception SAXException
     * @exception ParserConfigurationException
     * @return ElementTransition
     */
    ElementTransition createElementTransitionWithContext(File file) throws IOException, SAXException, ParserConfigurationException;

    /**
     * Creates a <code>TextTransition</code> by the File <code>file</code>.
     *
     * @param file
     * @exception IOException
     * @exception SAXException
     * @exception ParserConfigurationException
     * @return TextTransition
     */
    TextTransition createTextTransitionWithContext(File file) throws IOException, SAXException, ParserConfigurationException;

    /**
     * Creates a <code>BranchingTransition</code> by the File <code>file</code>.
     *
     * @param file
     * @exception IOException
     * @exception SAXException
     * @exception ParserConfigurationException
     * @return BranchingTransition
     */
    BranchingTransition createBranchingTransitionWithContext(File file) throws IOException, SAXException, ParserConfigurationException;

    /**
     * Creates a <code>MergingTransition</code> by the File <code>file</code>.
     *
     * @param file
     * @exception IOException
     * @exception SAXException
     * @exception ParserConfigurationException
     * @return MergingTransition
     */
    MergingTransition createMergingTransitionWithContext(File file) throws IOException, SAXException, ParserConfigurationException;

    /**
     * Creates a <code>OneOrMoreAttributeTransition</code> by the File <code>file</code>.
     *
     * @param file
     * @exception IOException
     * @exception SAXException
     * @exception ParserConfigurationException
     * @return OneOrMoreAttributeTransition
     */
    OneOrMoreAttributeTransition createOneOrMoreAttributeTransitionWithContext(File file) throws IOException, SAXException, ParserConfigurationException;

    /**
     * Creates a <code>NonExistentAttributeTransition</code> by the File <code>file</code>.
     *
     * @param file
     * @exception IOException
     * @exception SAXException
     * @exception ParserConfigurationException
     * @return NonExistentAttributeTransition
     */
    NonExistentAttributeTransition createNonExistentAttributeTransitionWithContext(File file) throws IOException, SAXException, ParserConfigurationException;

    /**
     * Creates a <code>AtomicTransition</code> by the File <code>file</code>.
     *
     * @param file
     * @exception IOException
     * @exception SAXException
     * @exception ParserConfigurationException
     * @return AtomicTransition
     */
    AtomicTransition createAtomicTransitionWithContext(File file) throws IOException, SAXException, ParserConfigurationException;

    /**
     * Creates a <code>Data</code> by the File <code>file</code>.
     *
     * @param file
     * @exception IOException
     * @exception SAXException
     * @exception ParserConfigurationException
     * @return Data
     */
    Data createDataWithContext(File file) throws IOException, SAXException, ParserConfigurationException;

    /**
     * Creates a <code>Param</code> by the File <code>file</code>.
     *
     * @param file
     * @exception IOException
     * @exception SAXException
     * @exception ParserConfigurationException
     * @return Param
     */
    Param createParamWithContext(File file) throws IOException, SAXException, ParserConfigurationException;

    /**
     * Creates a <code>Value</code> by the File <code>file</code>.
     *
     * @param file
     * @exception IOException
     * @exception SAXException
     * @exception ParserConfigurationException
     * @return Value
     */
    Value createValueWithContext(File file) throws IOException, SAXException, ParserConfigurationException;

    /**
     * Creates a <code>ListTransition</code> by the File <code>file</code>.
     *
     * @param file
     * @exception IOException
     * @exception SAXException
     * @exception ParserConfigurationException
     * @return ListTransition
     */
    ListTransition createListTransitionWithContext(File file) throws IOException, SAXException, ParserConfigurationException;

    /**
     * Creates a <code>BinaryTreeAutomaton</code>
     * by the String representation of URI <code>uri</code>.
     *
     * @param uri
     * @exception IOException
     * @exception SAXException
     * @exception ParserConfigurationException
     * @return BinaryTreeAutomaton
     */
    BinaryTreeAutomaton createBinaryTreeAutomaton(String uri) throws IOException, SAXException, ParserConfigurationException;

    /**
     * Creates a <code>FinalTransition</code>
     * by the String representation of URI <code>uri</code>.
     *
     * @param uri
     * @exception IOException
     * @exception SAXException
     * @exception ParserConfigurationException
     * @return FinalTransition
     */
    FinalTransition createFinalTransition(String uri) throws IOException, SAXException, ParserConfigurationException;

    /**
     * Creates a <code>StartTransition</code>
     * by the String representation of URI <code>uri</code>.
     *
     * @param uri
     * @exception IOException
     * @exception SAXException
     * @exception ParserConfigurationException
     * @return StartTransition
     */
    StartTransition createStartTransition(String uri) throws IOException, SAXException, ParserConfigurationException;

    /**
     * Creates a <code>ElementTransition</code>
     * by the String representation of URI <code>uri</code>.
     *
     * @param uri
     * @exception IOException
     * @exception SAXException
     * @exception ParserConfigurationException
     * @return ElementTransition
     */
    ElementTransition createElementTransition(String uri) throws IOException, SAXException, ParserConfigurationException;

    /**
     * Creates a <code>TextTransition</code>
     * by the String representation of URI <code>uri</code>.
     *
     * @param uri
     * @exception IOException
     * @exception SAXException
     * @exception ParserConfigurationException
     * @return TextTransition
     */
    TextTransition createTextTransition(String uri) throws IOException, SAXException, ParserConfigurationException;

    /**
     * Creates a <code>BranchingTransition</code>
     * by the String representation of URI <code>uri</code>.
     *
     * @param uri
     * @exception IOException
     * @exception SAXException
     * @exception ParserConfigurationException
     * @return BranchingTransition
     */
    BranchingTransition createBranchingTransition(String uri) throws IOException, SAXException, ParserConfigurationException;

    /**
     * Creates a <code>MergingTransition</code>
     * by the String representation of URI <code>uri</code>.
     *
     * @param uri
     * @exception IOException
     * @exception SAXException
     * @exception ParserConfigurationException
     * @return MergingTransition
     */
    MergingTransition createMergingTransition(String uri) throws IOException, SAXException, ParserConfigurationException;

    /**
     * Creates a <code>OneOrMoreAttributeTransition</code>
     * by the String representation of URI <code>uri</code>.
     *
     * @param uri
     * @exception IOException
     * @exception SAXException
     * @exception ParserConfigurationException
     * @return OneOrMoreAttributeTransition
     */
    OneOrMoreAttributeTransition createOneOrMoreAttributeTransition(String uri) throws IOException, SAXException, ParserConfigurationException;

    /**
     * Creates a <code>NonExistentAttributeTransition</code>
     * by the String representation of URI <code>uri</code>.
     *
     * @param uri
     * @exception IOException
     * @exception SAXException
     * @exception ParserConfigurationException
     * @return NonExistentAttributeTransition
     */
    NonExistentAttributeTransition createNonExistentAttributeTransition(String uri) throws IOException, SAXException, ParserConfigurationException;

    /**
     * Creates a <code>AtomicTransition</code>
     * by the String representation of URI <code>uri</code>.
     *
     * @param uri
     * @exception IOException
     * @exception SAXException
     * @exception ParserConfigurationException
     * @return AtomicTransition
     */
    AtomicTransition createAtomicTransition(String uri) throws IOException, SAXException, ParserConfigurationException;

    /**
     * Creates a <code>Data</code>
     * by the String representation of URI <code>uri</code>.
     *
     * @param uri
     * @exception IOException
     * @exception SAXException
     * @exception ParserConfigurationException
     * @return Data
     */
    Data createData(String uri) throws IOException, SAXException, ParserConfigurationException;

    /**
     * Creates a <code>Param</code>
     * by the String representation of URI <code>uri</code>.
     *
     * @param uri
     * @exception IOException
     * @exception SAXException
     * @exception ParserConfigurationException
     * @return Param
     */
    Param createParam(String uri) throws IOException, SAXException, ParserConfigurationException;

    /**
     * Creates a <code>Value</code>
     * by the String representation of URI <code>uri</code>.
     *
     * @param uri
     * @exception IOException
     * @exception SAXException
     * @exception ParserConfigurationException
     * @return Value
     */
    Value createValue(String uri) throws IOException, SAXException, ParserConfigurationException;

    /**
     * Creates a <code>ListTransition</code>
     * by the String representation of URI <code>uri</code>.
     *
     * @param uri
     * @exception IOException
     * @exception SAXException
     * @exception ParserConfigurationException
     * @return ListTransition
     */
    ListTransition createListTransition(String uri) throws IOException, SAXException, ParserConfigurationException;

    /**
     * Creates a <code>BinaryTreeAutomaton</code>
     * by the String representation of URI <code>uri</code>.
     *
     * @param uri
     * @exception IOException
     * @exception SAXException
     * @exception ParserConfigurationException
     * @return BinaryTreeAutomaton
     */
    BinaryTreeAutomaton createBinaryTreeAutomatonWithContext(String uri) throws IOException, SAXException, ParserConfigurationException;

    /**
     * Creates a <code>FinalTransition</code>
     * by the String representation of URI <code>uri</code>.
     *
     * @param uri
     * @exception IOException
     * @exception SAXException
     * @exception ParserConfigurationException
     * @return FinalTransition
     */
    FinalTransition createFinalTransitionWithContext(String uri) throws IOException, SAXException, ParserConfigurationException;

    /**
     * Creates a <code>StartTransition</code>
     * by the String representation of URI <code>uri</code>.
     *
     * @param uri
     * @exception IOException
     * @exception SAXException
     * @exception ParserConfigurationException
     * @return StartTransition
     */
    StartTransition createStartTransitionWithContext(String uri) throws IOException, SAXException, ParserConfigurationException;

    /**
     * Creates a <code>ElementTransition</code>
     * by the String representation of URI <code>uri</code>.
     *
     * @param uri
     * @exception IOException
     * @exception SAXException
     * @exception ParserConfigurationException
     * @return ElementTransition
     */
    ElementTransition createElementTransitionWithContext(String uri) throws IOException, SAXException, ParserConfigurationException;

    /**
     * Creates a <code>TextTransition</code>
     * by the String representation of URI <code>uri</code>.
     *
     * @param uri
     * @exception IOException
     * @exception SAXException
     * @exception ParserConfigurationException
     * @return TextTransition
     */
    TextTransition createTextTransitionWithContext(String uri) throws IOException, SAXException, ParserConfigurationException;

    /**
     * Creates a <code>BranchingTransition</code>
     * by the String representation of URI <code>uri</code>.
     *
     * @param uri
     * @exception IOException
     * @exception SAXException
     * @exception ParserConfigurationException
     * @return BranchingTransition
     */
    BranchingTransition createBranchingTransitionWithContext(String uri) throws IOException, SAXException, ParserConfigurationException;

    /**
     * Creates a <code>MergingTransition</code>
     * by the String representation of URI <code>uri</code>.
     *
     * @param uri
     * @exception IOException
     * @exception SAXException
     * @exception ParserConfigurationException
     * @return MergingTransition
     */
    MergingTransition createMergingTransitionWithContext(String uri) throws IOException, SAXException, ParserConfigurationException;

    /**
     * Creates a <code>OneOrMoreAttributeTransition</code>
     * by the String representation of URI <code>uri</code>.
     *
     * @param uri
     * @exception IOException
     * @exception SAXException
     * @exception ParserConfigurationException
     * @return OneOrMoreAttributeTransition
     */
    OneOrMoreAttributeTransition createOneOrMoreAttributeTransitionWithContext(String uri) throws IOException, SAXException, ParserConfigurationException;

    /**
     * Creates a <code>NonExistentAttributeTransition</code>
     * by the String representation of URI <code>uri</code>.
     *
     * @param uri
     * @exception IOException
     * @exception SAXException
     * @exception ParserConfigurationException
     * @return NonExistentAttributeTransition
     */
    NonExistentAttributeTransition createNonExistentAttributeTransitionWithContext(String uri) throws IOException, SAXException, ParserConfigurationException;

    /**
     * Creates a <code>AtomicTransition</code>
     * by the String representation of URI <code>uri</code>.
     *
     * @param uri
     * @exception IOException
     * @exception SAXException
     * @exception ParserConfigurationException
     * @return AtomicTransition
     */
    AtomicTransition createAtomicTransitionWithContext(String uri) throws IOException, SAXException, ParserConfigurationException;

    /**
     * Creates a <code>Data</code>
     * by the String representation of URI <code>uri</code>.
     *
     * @param uri
     * @exception IOException
     * @exception SAXException
     * @exception ParserConfigurationException
     * @return Data
     */
    Data createDataWithContext(String uri) throws IOException, SAXException, ParserConfigurationException;

    /**
     * Creates a <code>Param</code>
     * by the String representation of URI <code>uri</code>.
     *
     * @param uri
     * @exception IOException
     * @exception SAXException
     * @exception ParserConfigurationException
     * @return Param
     */
    Param createParamWithContext(String uri) throws IOException, SAXException, ParserConfigurationException;

    /**
     * Creates a <code>Value</code>
     * by the String representation of URI <code>uri</code>.
     *
     * @param uri
     * @exception IOException
     * @exception SAXException
     * @exception ParserConfigurationException
     * @return Value
     */
    Value createValueWithContext(String uri) throws IOException, SAXException, ParserConfigurationException;

    /**
     * Creates a <code>ListTransition</code>
     * by the String representation of URI <code>uri</code>.
     *
     * @param uri
     * @exception IOException
     * @exception SAXException
     * @exception ParserConfigurationException
     * @return ListTransition
     */
    ListTransition createListTransitionWithContext(String uri) throws IOException, SAXException, ParserConfigurationException;

    /**
     * Creates a <code>BinaryTreeAutomaton</code> by the URL <code>url</code>.
     *
     * @param url
     * @exception IOException
     * @exception SAXException
     * @exception ParserConfigurationException
     * @return BinaryTreeAutomaton
     */
    BinaryTreeAutomaton createBinaryTreeAutomaton(URL url) throws IOException, SAXException, ParserConfigurationException;

    /**
     * Creates a <code>FinalTransition</code> by the URL <code>url</code>.
     *
     * @param url
     * @exception IOException
     * @exception SAXException
     * @exception ParserConfigurationException
     * @return FinalTransition
     */
    FinalTransition createFinalTransition(URL url) throws IOException, SAXException, ParserConfigurationException;

    /**
     * Creates a <code>StartTransition</code> by the URL <code>url</code>.
     *
     * @param url
     * @exception IOException
     * @exception SAXException
     * @exception ParserConfigurationException
     * @return StartTransition
     */
    StartTransition createStartTransition(URL url) throws IOException, SAXException, ParserConfigurationException;

    /**
     * Creates a <code>ElementTransition</code> by the URL <code>url</code>.
     *
     * @param url
     * @exception IOException
     * @exception SAXException
     * @exception ParserConfigurationException
     * @return ElementTransition
     */
    ElementTransition createElementTransition(URL url) throws IOException, SAXException, ParserConfigurationException;

    /**
     * Creates a <code>TextTransition</code> by the URL <code>url</code>.
     *
     * @param url
     * @exception IOException
     * @exception SAXException
     * @exception ParserConfigurationException
     * @return TextTransition
     */
    TextTransition createTextTransition(URL url) throws IOException, SAXException, ParserConfigurationException;

    /**
     * Creates a <code>BranchingTransition</code> by the URL <code>url</code>.
     *
     * @param url
     * @exception IOException
     * @exception SAXException
     * @exception ParserConfigurationException
     * @return BranchingTransition
     */
    BranchingTransition createBranchingTransition(URL url) throws IOException, SAXException, ParserConfigurationException;

    /**
     * Creates a <code>MergingTransition</code> by the URL <code>url</code>.
     *
     * @param url
     * @exception IOException
     * @exception SAXException
     * @exception ParserConfigurationException
     * @return MergingTransition
     */
    MergingTransition createMergingTransition(URL url) throws IOException, SAXException, ParserConfigurationException;

    /**
     * Creates a <code>OneOrMoreAttributeTransition</code> by the URL <code>url</code>.
     *
     * @param url
     * @exception IOException
     * @exception SAXException
     * @exception ParserConfigurationException
     * @return OneOrMoreAttributeTransition
     */
    OneOrMoreAttributeTransition createOneOrMoreAttributeTransition(URL url) throws IOException, SAXException, ParserConfigurationException;

    /**
     * Creates a <code>NonExistentAttributeTransition</code> by the URL <code>url</code>.
     *
     * @param url
     * @exception IOException
     * @exception SAXException
     * @exception ParserConfigurationException
     * @return NonExistentAttributeTransition
     */
    NonExistentAttributeTransition createNonExistentAttributeTransition(URL url) throws IOException, SAXException, ParserConfigurationException;

    /**
     * Creates a <code>AtomicTransition</code> by the URL <code>url</code>.
     *
     * @param url
     * @exception IOException
     * @exception SAXException
     * @exception ParserConfigurationException
     * @return AtomicTransition
     */
    AtomicTransition createAtomicTransition(URL url) throws IOException, SAXException, ParserConfigurationException;

    /**
     * Creates a <code>Data</code> by the URL <code>url</code>.
     *
     * @param url
     * @exception IOException
     * @exception SAXException
     * @exception ParserConfigurationException
     * @return Data
     */
    Data createData(URL url) throws IOException, SAXException, ParserConfigurationException;

    /**
     * Creates a <code>Param</code> by the URL <code>url</code>.
     *
     * @param url
     * @exception IOException
     * @exception SAXException
     * @exception ParserConfigurationException
     * @return Param
     */
    Param createParam(URL url) throws IOException, SAXException, ParserConfigurationException;

    /**
     * Creates a <code>Value</code> by the URL <code>url</code>.
     *
     * @param url
     * @exception IOException
     * @exception SAXException
     * @exception ParserConfigurationException
     * @return Value
     */
    Value createValue(URL url) throws IOException, SAXException, ParserConfigurationException;

    /**
     * Creates a <code>ListTransition</code> by the URL <code>url</code>.
     *
     * @param url
     * @exception IOException
     * @exception SAXException
     * @exception ParserConfigurationException
     * @return ListTransition
     */
    ListTransition createListTransition(URL url) throws IOException, SAXException, ParserConfigurationException;

    /**
     * Creates a <code>BinaryTreeAutomaton</code> by the URL <code>url</code>.
     *
     * @param url
     * @exception IOException
     * @exception SAXException
     * @exception ParserConfigurationException
     * @return BinaryTreeAutomaton
     */
    BinaryTreeAutomaton createBinaryTreeAutomatonWithContext(URL url) throws IOException, SAXException, ParserConfigurationException;

    /**
     * Creates a <code>FinalTransition</code> by the URL <code>url</code>.
     *
     * @param url
     * @exception IOException
     * @exception SAXException
     * @exception ParserConfigurationException
     * @return FinalTransition
     */
    FinalTransition createFinalTransitionWithContext(URL url) throws IOException, SAXException, ParserConfigurationException;

    /**
     * Creates a <code>StartTransition</code> by the URL <code>url</code>.
     *
     * @param url
     * @exception IOException
     * @exception SAXException
     * @exception ParserConfigurationException
     * @return StartTransition
     */
    StartTransition createStartTransitionWithContext(URL url) throws IOException, SAXException, ParserConfigurationException;

    /**
     * Creates a <code>ElementTransition</code> by the URL <code>url</code>.
     *
     * @param url
     * @exception IOException
     * @exception SAXException
     * @exception ParserConfigurationException
     * @return ElementTransition
     */
    ElementTransition createElementTransitionWithContext(URL url) throws IOException, SAXException, ParserConfigurationException;

    /**
     * Creates a <code>TextTransition</code> by the URL <code>url</code>.
     *
     * @param url
     * @exception IOException
     * @exception SAXException
     * @exception ParserConfigurationException
     * @return TextTransition
     */
    TextTransition createTextTransitionWithContext(URL url) throws IOException, SAXException, ParserConfigurationException;

    /**
     * Creates a <code>BranchingTransition</code> by the URL <code>url</code>.
     *
     * @param url
     * @exception IOException
     * @exception SAXException
     * @exception ParserConfigurationException
     * @return BranchingTransition
     */
    BranchingTransition createBranchingTransitionWithContext(URL url) throws IOException, SAXException, ParserConfigurationException;

    /**
     * Creates a <code>MergingTransition</code> by the URL <code>url</code>.
     *
     * @param url
     * @exception IOException
     * @exception SAXException
     * @exception ParserConfigurationException
     * @return MergingTransition
     */
    MergingTransition createMergingTransitionWithContext(URL url) throws IOException, SAXException, ParserConfigurationException;

    /**
     * Creates a <code>OneOrMoreAttributeTransition</code> by the URL <code>url</code>.
     *
     * @param url
     * @exception IOException
     * @exception SAXException
     * @exception ParserConfigurationException
     * @return OneOrMoreAttributeTransition
     */
    OneOrMoreAttributeTransition createOneOrMoreAttributeTransitionWithContext(URL url) throws IOException, SAXException, ParserConfigurationException;

    /**
     * Creates a <code>NonExistentAttributeTransition</code> by the URL <code>url</code>.
     *
     * @param url
     * @exception IOException
     * @exception SAXException
     * @exception ParserConfigurationException
     * @return NonExistentAttributeTransition
     */
    NonExistentAttributeTransition createNonExistentAttributeTransitionWithContext(URL url) throws IOException, SAXException, ParserConfigurationException;

    /**
     * Creates a <code>AtomicTransition</code> by the URL <code>url</code>.
     *
     * @param url
     * @exception IOException
     * @exception SAXException
     * @exception ParserConfigurationException
     * @return AtomicTransition
     */
    AtomicTransition createAtomicTransitionWithContext(URL url) throws IOException, SAXException, ParserConfigurationException;

    /**
     * Creates a <code>Data</code> by the URL <code>url</code>.
     *
     * @param url
     * @exception IOException
     * @exception SAXException
     * @exception ParserConfigurationException
     * @return Data
     */
    Data createDataWithContext(URL url) throws IOException, SAXException, ParserConfigurationException;

    /**
     * Creates a <code>Param</code> by the URL <code>url</code>.
     *
     * @param url
     * @exception IOException
     * @exception SAXException
     * @exception ParserConfigurationException
     * @return Param
     */
    Param createParamWithContext(URL url) throws IOException, SAXException, ParserConfigurationException;

    /**
     * Creates a <code>Value</code> by the URL <code>url</code>.
     *
     * @param url
     * @exception IOException
     * @exception SAXException
     * @exception ParserConfigurationException
     * @return Value
     */
    Value createValueWithContext(URL url) throws IOException, SAXException, ParserConfigurationException;

    /**
     * Creates a <code>ListTransition</code> by the URL <code>url</code>.
     *
     * @param url
     * @exception IOException
     * @exception SAXException
     * @exception ParserConfigurationException
     * @return ListTransition
     */
    ListTransition createListTransitionWithContext(URL url) throws IOException, SAXException, ParserConfigurationException;

    /**
     * Creates a <code>BinaryTreeAutomaton</code> by the InputStream <code>in</code>.
     *
     * @param in
     * @exception IOException
     * @exception SAXException
     * @exception ParserConfigurationException
     * @return BinaryTreeAutomaton
     */
    BinaryTreeAutomaton createBinaryTreeAutomaton(InputStream in) throws IOException, SAXException, ParserConfigurationException;

    /**
     * Creates a <code>FinalTransition</code> by the InputStream <code>in</code>.
     *
     * @param in
     * @exception IOException
     * @exception SAXException
     * @exception ParserConfigurationException
     * @return FinalTransition
     */
    FinalTransition createFinalTransition(InputStream in) throws IOException, SAXException, ParserConfigurationException;

    /**
     * Creates a <code>StartTransition</code> by the InputStream <code>in</code>.
     *
     * @param in
     * @exception IOException
     * @exception SAXException
     * @exception ParserConfigurationException
     * @return StartTransition
     */
    StartTransition createStartTransition(InputStream in) throws IOException, SAXException, ParserConfigurationException;

    /**
     * Creates a <code>ElementTransition</code> by the InputStream <code>in</code>.
     *
     * @param in
     * @exception IOException
     * @exception SAXException
     * @exception ParserConfigurationException
     * @return ElementTransition
     */
    ElementTransition createElementTransition(InputStream in) throws IOException, SAXException, ParserConfigurationException;

    /**
     * Creates a <code>TextTransition</code> by the InputStream <code>in</code>.
     *
     * @param in
     * @exception IOException
     * @exception SAXException
     * @exception ParserConfigurationException
     * @return TextTransition
     */
    TextTransition createTextTransition(InputStream in) throws IOException, SAXException, ParserConfigurationException;

    /**
     * Creates a <code>BranchingTransition</code> by the InputStream <code>in</code>.
     *
     * @param in
     * @exception IOException
     * @exception SAXException
     * @exception ParserConfigurationException
     * @return BranchingTransition
     */
    BranchingTransition createBranchingTransition(InputStream in) throws IOException, SAXException, ParserConfigurationException;

    /**
     * Creates a <code>MergingTransition</code> by the InputStream <code>in</code>.
     *
     * @param in
     * @exception IOException
     * @exception SAXException
     * @exception ParserConfigurationException
     * @return MergingTransition
     */
    MergingTransition createMergingTransition(InputStream in) throws IOException, SAXException, ParserConfigurationException;

    /**
     * Creates a <code>OneOrMoreAttributeTransition</code> by the InputStream <code>in</code>.
     *
     * @param in
     * @exception IOException
     * @exception SAXException
     * @exception ParserConfigurationException
     * @return OneOrMoreAttributeTransition
     */
    OneOrMoreAttributeTransition createOneOrMoreAttributeTransition(InputStream in) throws IOException, SAXException, ParserConfigurationException;

    /**
     * Creates a <code>NonExistentAttributeTransition</code> by the InputStream <code>in</code>.
     *
     * @param in
     * @exception IOException
     * @exception SAXException
     * @exception ParserConfigurationException
     * @return NonExistentAttributeTransition
     */
    NonExistentAttributeTransition createNonExistentAttributeTransition(InputStream in) throws IOException, SAXException, ParserConfigurationException;

    /**
     * Creates a <code>AtomicTransition</code> by the InputStream <code>in</code>.
     *
     * @param in
     * @exception IOException
     * @exception SAXException
     * @exception ParserConfigurationException
     * @return AtomicTransition
     */
    AtomicTransition createAtomicTransition(InputStream in) throws IOException, SAXException, ParserConfigurationException;

    /**
     * Creates a <code>Data</code> by the InputStream <code>in</code>.
     *
     * @param in
     * @exception IOException
     * @exception SAXException
     * @exception ParserConfigurationException
     * @return Data
     */
    Data createData(InputStream in) throws IOException, SAXException, ParserConfigurationException;

    /**
     * Creates a <code>Param</code> by the InputStream <code>in</code>.
     *
     * @param in
     * @exception IOException
     * @exception SAXException
     * @exception ParserConfigurationException
     * @return Param
     */
    Param createParam(InputStream in) throws IOException, SAXException, ParserConfigurationException;

    /**
     * Creates a <code>Value</code> by the InputStream <code>in</code>.
     *
     * @param in
     * @exception IOException
     * @exception SAXException
     * @exception ParserConfigurationException
     * @return Value
     */
    Value createValue(InputStream in) throws IOException, SAXException, ParserConfigurationException;

    /**
     * Creates a <code>ListTransition</code> by the InputStream <code>in</code>.
     *
     * @param in
     * @exception IOException
     * @exception SAXException
     * @exception ParserConfigurationException
     * @return ListTransition
     */
    ListTransition createListTransition(InputStream in) throws IOException, SAXException, ParserConfigurationException;

    /**
     * Creates a <code>BinaryTreeAutomaton</code> by the InputStream <code>in</code>.
     *
     * @param in
     * @exception IOException
     * @exception SAXException
     * @exception ParserConfigurationException
     * @return BinaryTreeAutomaton
     */
    BinaryTreeAutomaton createBinaryTreeAutomatonWithContext(InputStream in) throws IOException, SAXException, ParserConfigurationException;

    /**
     * Creates a <code>FinalTransition</code> by the InputStream <code>in</code>.
     *
     * @param in
     * @exception IOException
     * @exception SAXException
     * @exception ParserConfigurationException
     * @return FinalTransition
     */
    FinalTransition createFinalTransitionWithContext(InputStream in) throws IOException, SAXException, ParserConfigurationException;

    /**
     * Creates a <code>StartTransition</code> by the InputStream <code>in</code>.
     *
     * @param in
     * @exception IOException
     * @exception SAXException
     * @exception ParserConfigurationException
     * @return StartTransition
     */
    StartTransition createStartTransitionWithContext(InputStream in) throws IOException, SAXException, ParserConfigurationException;

    /**
     * Creates a <code>ElementTransition</code> by the InputStream <code>in</code>.
     *
     * @param in
     * @exception IOException
     * @exception SAXException
     * @exception ParserConfigurationException
     * @return ElementTransition
     */
    ElementTransition createElementTransitionWithContext(InputStream in) throws IOException, SAXException, ParserConfigurationException;

    /**
     * Creates a <code>TextTransition</code> by the InputStream <code>in</code>.
     *
     * @param in
     * @exception IOException
     * @exception SAXException
     * @exception ParserConfigurationException
     * @return TextTransition
     */
    TextTransition createTextTransitionWithContext(InputStream in) throws IOException, SAXException, ParserConfigurationException;

    /**
     * Creates a <code>BranchingTransition</code> by the InputStream <code>in</code>.
     *
     * @param in
     * @exception IOException
     * @exception SAXException
     * @exception ParserConfigurationException
     * @return BranchingTransition
     */
    BranchingTransition createBranchingTransitionWithContext(InputStream in) throws IOException, SAXException, ParserConfigurationException;

    /**
     * Creates a <code>MergingTransition</code> by the InputStream <code>in</code>.
     *
     * @param in
     * @exception IOException
     * @exception SAXException
     * @exception ParserConfigurationException
     * @return MergingTransition
     */
    MergingTransition createMergingTransitionWithContext(InputStream in) throws IOException, SAXException, ParserConfigurationException;

    /**
     * Creates a <code>OneOrMoreAttributeTransition</code> by the InputStream <code>in</code>.
     *
     * @param in
     * @exception IOException
     * @exception SAXException
     * @exception ParserConfigurationException
     * @return OneOrMoreAttributeTransition
     */
    OneOrMoreAttributeTransition createOneOrMoreAttributeTransitionWithContext(InputStream in) throws IOException, SAXException, ParserConfigurationException;

    /**
     * Creates a <code>NonExistentAttributeTransition</code> by the InputStream <code>in</code>.
     *
     * @param in
     * @exception IOException
     * @exception SAXException
     * @exception ParserConfigurationException
     * @return NonExistentAttributeTransition
     */
    NonExistentAttributeTransition createNonExistentAttributeTransitionWithContext(InputStream in) throws IOException, SAXException, ParserConfigurationException;

    /**
     * Creates a <code>AtomicTransition</code> by the InputStream <code>in</code>.
     *
     * @param in
     * @exception IOException
     * @exception SAXException
     * @exception ParserConfigurationException
     * @return AtomicTransition
     */
    AtomicTransition createAtomicTransitionWithContext(InputStream in) throws IOException, SAXException, ParserConfigurationException;

    /**
     * Creates a <code>Data</code> by the InputStream <code>in</code>.
     *
     * @param in
     * @exception IOException
     * @exception SAXException
     * @exception ParserConfigurationException
     * @return Data
     */
    Data createDataWithContext(InputStream in) throws IOException, SAXException, ParserConfigurationException;

    /**
     * Creates a <code>Param</code> by the InputStream <code>in</code>.
     *
     * @param in
     * @exception IOException
     * @exception SAXException
     * @exception ParserConfigurationException
     * @return Param
     */
    Param createParamWithContext(InputStream in) throws IOException, SAXException, ParserConfigurationException;

    /**
     * Creates a <code>Value</code> by the InputStream <code>in</code>.
     *
     * @param in
     * @exception IOException
     * @exception SAXException
     * @exception ParserConfigurationException
     * @return Value
     */
    Value createValueWithContext(InputStream in) throws IOException, SAXException, ParserConfigurationException;

    /**
     * Creates a <code>ListTransition</code> by the InputStream <code>in</code>.
     *
     * @param in
     * @exception IOException
     * @exception SAXException
     * @exception ParserConfigurationException
     * @return ListTransition
     */
    ListTransition createListTransitionWithContext(InputStream in) throws IOException, SAXException, ParserConfigurationException;

    /**
     * Creates a <code>BinaryTreeAutomaton</code> by the InputSource <code>is</code>.
     *
     * @param is
     * @exception IOException
     * @exception SAXException
     * @exception ParserConfigurationException
     * @return BinaryTreeAutomaton
     */
    BinaryTreeAutomaton createBinaryTreeAutomaton(InputSource is) throws IOException, SAXException, ParserConfigurationException;

    /**
     * Creates a <code>FinalTransition</code> by the InputSource <code>is</code>.
     *
     * @param is
     * @exception IOException
     * @exception SAXException
     * @exception ParserConfigurationException
     * @return FinalTransition
     */
    FinalTransition createFinalTransition(InputSource is) throws IOException, SAXException, ParserConfigurationException;

    /**
     * Creates a <code>StartTransition</code> by the InputSource <code>is</code>.
     *
     * @param is
     * @exception IOException
     * @exception SAXException
     * @exception ParserConfigurationException
     * @return StartTransition
     */
    StartTransition createStartTransition(InputSource is) throws IOException, SAXException, ParserConfigurationException;

    /**
     * Creates a <code>ElementTransition</code> by the InputSource <code>is</code>.
     *
     * @param is
     * @exception IOException
     * @exception SAXException
     * @exception ParserConfigurationException
     * @return ElementTransition
     */
    ElementTransition createElementTransition(InputSource is) throws IOException, SAXException, ParserConfigurationException;

    /**
     * Creates a <code>TextTransition</code> by the InputSource <code>is</code>.
     *
     * @param is
     * @exception IOException
     * @exception SAXException
     * @exception ParserConfigurationException
     * @return TextTransition
     */
    TextTransition createTextTransition(InputSource is) throws IOException, SAXException, ParserConfigurationException;

    /**
     * Creates a <code>BranchingTransition</code> by the InputSource <code>is</code>.
     *
     * @param is
     * @exception IOException
     * @exception SAXException
     * @exception ParserConfigurationException
     * @return BranchingTransition
     */
    BranchingTransition createBranchingTransition(InputSource is) throws IOException, SAXException, ParserConfigurationException;

    /**
     * Creates a <code>MergingTransition</code> by the InputSource <code>is</code>.
     *
     * @param is
     * @exception IOException
     * @exception SAXException
     * @exception ParserConfigurationException
     * @return MergingTransition
     */
    MergingTransition createMergingTransition(InputSource is) throws IOException, SAXException, ParserConfigurationException;

    /**
     * Creates a <code>OneOrMoreAttributeTransition</code> by the InputSource <code>is</code>.
     *
     * @param is
     * @exception IOException
     * @exception SAXException
     * @exception ParserConfigurationException
     * @return OneOrMoreAttributeTransition
     */
    OneOrMoreAttributeTransition createOneOrMoreAttributeTransition(InputSource is) throws IOException, SAXException, ParserConfigurationException;

    /**
     * Creates a <code>NonExistentAttributeTransition</code> by the InputSource <code>is</code>.
     *
     * @param is
     * @exception IOException
     * @exception SAXException
     * @exception ParserConfigurationException
     * @return NonExistentAttributeTransition
     */
    NonExistentAttributeTransition createNonExistentAttributeTransition(InputSource is) throws IOException, SAXException, ParserConfigurationException;

    /**
     * Creates a <code>AtomicTransition</code> by the InputSource <code>is</code>.
     *
     * @param is
     * @exception IOException
     * @exception SAXException
     * @exception ParserConfigurationException
     * @return AtomicTransition
     */
    AtomicTransition createAtomicTransition(InputSource is) throws IOException, SAXException, ParserConfigurationException;

    /**
     * Creates a <code>Data</code> by the InputSource <code>is</code>.
     *
     * @param is
     * @exception IOException
     * @exception SAXException
     * @exception ParserConfigurationException
     * @return Data
     */
    Data createData(InputSource is) throws IOException, SAXException, ParserConfigurationException;

    /**
     * Creates a <code>Param</code> by the InputSource <code>is</code>.
     *
     * @param is
     * @exception IOException
     * @exception SAXException
     * @exception ParserConfigurationException
     * @return Param
     */
    Param createParam(InputSource is) throws IOException, SAXException, ParserConfigurationException;

    /**
     * Creates a <code>Value</code> by the InputSource <code>is</code>.
     *
     * @param is
     * @exception IOException
     * @exception SAXException
     * @exception ParserConfigurationException
     * @return Value
     */
    Value createValue(InputSource is) throws IOException, SAXException, ParserConfigurationException;

    /**
     * Creates a <code>ListTransition</code> by the InputSource <code>is</code>.
     *
     * @param is
     * @exception IOException
     * @exception SAXException
     * @exception ParserConfigurationException
     * @return ListTransition
     */
    ListTransition createListTransition(InputSource is) throws IOException, SAXException, ParserConfigurationException;

    /**
     * Creates a <code>BinaryTreeAutomaton</code> by the InputSource <code>is</code>.
     *
     * @param is
     * @exception IOException
     * @exception SAXException
     * @exception ParserConfigurationException
     * @return BinaryTreeAutomaton
     */
    BinaryTreeAutomaton createBinaryTreeAutomatonWithContext(InputSource is) throws IOException, SAXException, ParserConfigurationException;

    /**
     * Creates a <code>FinalTransition</code> by the InputSource <code>is</code>.
     *
     * @param is
     * @exception IOException
     * @exception SAXException
     * @exception ParserConfigurationException
     * @return FinalTransition
     */
    FinalTransition createFinalTransitionWithContext(InputSource is) throws IOException, SAXException, ParserConfigurationException;

    /**
     * Creates a <code>StartTransition</code> by the InputSource <code>is</code>.
     *
     * @param is
     * @exception IOException
     * @exception SAXException
     * @exception ParserConfigurationException
     * @return StartTransition
     */
    StartTransition createStartTransitionWithContext(InputSource is) throws IOException, SAXException, ParserConfigurationException;

    /**
     * Creates a <code>ElementTransition</code> by the InputSource <code>is</code>.
     *
     * @param is
     * @exception IOException
     * @exception SAXException
     * @exception ParserConfigurationException
     * @return ElementTransition
     */
    ElementTransition createElementTransitionWithContext(InputSource is) throws IOException, SAXException, ParserConfigurationException;

    /**
     * Creates a <code>TextTransition</code> by the InputSource <code>is</code>.
     *
     * @param is
     * @exception IOException
     * @exception SAXException
     * @exception ParserConfigurationException
     * @return TextTransition
     */
    TextTransition createTextTransitionWithContext(InputSource is) throws IOException, SAXException, ParserConfigurationException;

    /**
     * Creates a <code>BranchingTransition</code> by the InputSource <code>is</code>.
     *
     * @param is
     * @exception IOException
     * @exception SAXException
     * @exception ParserConfigurationException
     * @return BranchingTransition
     */
    BranchingTransition createBranchingTransitionWithContext(InputSource is) throws IOException, SAXException, ParserConfigurationException;

    /**
     * Creates a <code>MergingTransition</code> by the InputSource <code>is</code>.
     *
     * @param is
     * @exception IOException
     * @exception SAXException
     * @exception ParserConfigurationException
     * @return MergingTransition
     */
    MergingTransition createMergingTransitionWithContext(InputSource is) throws IOException, SAXException, ParserConfigurationException;

    /**
     * Creates a <code>OneOrMoreAttributeTransition</code> by the InputSource <code>is</code>.
     *
     * @param is
     * @exception IOException
     * @exception SAXException
     * @exception ParserConfigurationException
     * @return OneOrMoreAttributeTransition
     */
    OneOrMoreAttributeTransition createOneOrMoreAttributeTransitionWithContext(InputSource is) throws IOException, SAXException, ParserConfigurationException;

    /**
     * Creates a <code>NonExistentAttributeTransition</code> by the InputSource <code>is</code>.
     *
     * @param is
     * @exception IOException
     * @exception SAXException
     * @exception ParserConfigurationException
     * @return NonExistentAttributeTransition
     */
    NonExistentAttributeTransition createNonExistentAttributeTransitionWithContext(InputSource is) throws IOException, SAXException, ParserConfigurationException;

    /**
     * Creates a <code>AtomicTransition</code> by the InputSource <code>is</code>.
     *
     * @param is
     * @exception IOException
     * @exception SAXException
     * @exception ParserConfigurationException
     * @return AtomicTransition
     */
    AtomicTransition createAtomicTransitionWithContext(InputSource is) throws IOException, SAXException, ParserConfigurationException;

    /**
     * Creates a <code>Data</code> by the InputSource <code>is</code>.
     *
     * @param is
     * @exception IOException
     * @exception SAXException
     * @exception ParserConfigurationException
     * @return Data
     */
    Data createDataWithContext(InputSource is) throws IOException, SAXException, ParserConfigurationException;

    /**
     * Creates a <code>Param</code> by the InputSource <code>is</code>.
     *
     * @param is
     * @exception IOException
     * @exception SAXException
     * @exception ParserConfigurationException
     * @return Param
     */
    Param createParamWithContext(InputSource is) throws IOException, SAXException, ParserConfigurationException;

    /**
     * Creates a <code>Value</code> by the InputSource <code>is</code>.
     *
     * @param is
     * @exception IOException
     * @exception SAXException
     * @exception ParserConfigurationException
     * @return Value
     */
    Value createValueWithContext(InputSource is) throws IOException, SAXException, ParserConfigurationException;

    /**
     * Creates a <code>ListTransition</code> by the InputSource <code>is</code>.
     *
     * @param is
     * @exception IOException
     * @exception SAXException
     * @exception ParserConfigurationException
     * @return ListTransition
     */
    ListTransition createListTransitionWithContext(InputSource is) throws IOException, SAXException, ParserConfigurationException;

    /**
     * Creates a <code>BinaryTreeAutomaton</code> by the Reader <code>reader</code>.
     *
     * @param reader
     * @exception IOException
     * @exception SAXException
     * @exception ParserConfigurationException
     * @return BinaryTreeAutomaton
     */
    BinaryTreeAutomaton createBinaryTreeAutomaton(Reader reader) throws IOException, SAXException, ParserConfigurationException;

    /**
     * Creates a <code>FinalTransition</code> by the Reader <code>reader</code>.
     *
     * @param reader
     * @exception IOException
     * @exception SAXException
     * @exception ParserConfigurationException
     * @return FinalTransition
     */
    FinalTransition createFinalTransition(Reader reader) throws IOException, SAXException, ParserConfigurationException;

    /**
     * Creates a <code>StartTransition</code> by the Reader <code>reader</code>.
     *
     * @param reader
     * @exception IOException
     * @exception SAXException
     * @exception ParserConfigurationException
     * @return StartTransition
     */
    StartTransition createStartTransition(Reader reader) throws IOException, SAXException, ParserConfigurationException;

    /**
     * Creates a <code>ElementTransition</code> by the Reader <code>reader</code>.
     *
     * @param reader
     * @exception IOException
     * @exception SAXException
     * @exception ParserConfigurationException
     * @return ElementTransition
     */
    ElementTransition createElementTransition(Reader reader) throws IOException, SAXException, ParserConfigurationException;

    /**
     * Creates a <code>TextTransition</code> by the Reader <code>reader</code>.
     *
     * @param reader
     * @exception IOException
     * @exception SAXException
     * @exception ParserConfigurationException
     * @return TextTransition
     */
    TextTransition createTextTransition(Reader reader) throws IOException, SAXException, ParserConfigurationException;

    /**
     * Creates a <code>BranchingTransition</code> by the Reader <code>reader</code>.
     *
     * @param reader
     * @exception IOException
     * @exception SAXException
     * @exception ParserConfigurationException
     * @return BranchingTransition
     */
    BranchingTransition createBranchingTransition(Reader reader) throws IOException, SAXException, ParserConfigurationException;

    /**
     * Creates a <code>MergingTransition</code> by the Reader <code>reader</code>.
     *
     * @param reader
     * @exception IOException
     * @exception SAXException
     * @exception ParserConfigurationException
     * @return MergingTransition
     */
    MergingTransition createMergingTransition(Reader reader) throws IOException, SAXException, ParserConfigurationException;

    /**
     * Creates a <code>OneOrMoreAttributeTransition</code> by the Reader <code>reader</code>.
     *
     * @param reader
     * @exception IOException
     * @exception SAXException
     * @exception ParserConfigurationException
     * @return OneOrMoreAttributeTransition
     */
    OneOrMoreAttributeTransition createOneOrMoreAttributeTransition(Reader reader) throws IOException, SAXException, ParserConfigurationException;

    /**
     * Creates a <code>NonExistentAttributeTransition</code> by the Reader <code>reader</code>.
     *
     * @param reader
     * @exception IOException
     * @exception SAXException
     * @exception ParserConfigurationException
     * @return NonExistentAttributeTransition
     */
    NonExistentAttributeTransition createNonExistentAttributeTransition(Reader reader) throws IOException, SAXException, ParserConfigurationException;

    /**
     * Creates a <code>AtomicTransition</code> by the Reader <code>reader</code>.
     *
     * @param reader
     * @exception IOException
     * @exception SAXException
     * @exception ParserConfigurationException
     * @return AtomicTransition
     */
    AtomicTransition createAtomicTransition(Reader reader) throws IOException, SAXException, ParserConfigurationException;

    /**
     * Creates a <code>Data</code> by the Reader <code>reader</code>.
     *
     * @param reader
     * @exception IOException
     * @exception SAXException
     * @exception ParserConfigurationException
     * @return Data
     */
    Data createData(Reader reader) throws IOException, SAXException, ParserConfigurationException;

    /**
     * Creates a <code>Param</code> by the Reader <code>reader</code>.
     *
     * @param reader
     * @exception IOException
     * @exception SAXException
     * @exception ParserConfigurationException
     * @return Param
     */
    Param createParam(Reader reader) throws IOException, SAXException, ParserConfigurationException;

    /**
     * Creates a <code>Value</code> by the Reader <code>reader</code>.
     *
     * @param reader
     * @exception IOException
     * @exception SAXException
     * @exception ParserConfigurationException
     * @return Value
     */
    Value createValue(Reader reader) throws IOException, SAXException, ParserConfigurationException;

    /**
     * Creates a <code>ListTransition</code> by the Reader <code>reader</code>.
     *
     * @param reader
     * @exception IOException
     * @exception SAXException
     * @exception ParserConfigurationException
     * @return ListTransition
     */
    ListTransition createListTransition(Reader reader) throws IOException, SAXException, ParserConfigurationException;

    /**
     * Creates a <code>BinaryTreeAutomaton</code> by the Reader <code>reader</code>.
     *
     * @param reader
     * @exception IOException
     * @exception SAXException
     * @exception ParserConfigurationException
     * @return BinaryTreeAutomaton
     */
    BinaryTreeAutomaton createBinaryTreeAutomatonWithContext(Reader reader) throws IOException, SAXException, ParserConfigurationException;

    /**
     * Creates a <code>FinalTransition</code> by the Reader <code>reader</code>.
     *
     * @param reader
     * @exception IOException
     * @exception SAXException
     * @exception ParserConfigurationException
     * @return FinalTransition
     */
    FinalTransition createFinalTransitionWithContext(Reader reader) throws IOException, SAXException, ParserConfigurationException;

    /**
     * Creates a <code>StartTransition</code> by the Reader <code>reader</code>.
     *
     * @param reader
     * @exception IOException
     * @exception SAXException
     * @exception ParserConfigurationException
     * @return StartTransition
     */
    StartTransition createStartTransitionWithContext(Reader reader) throws IOException, SAXException, ParserConfigurationException;

    /**
     * Creates a <code>ElementTransition</code> by the Reader <code>reader</code>.
     *
     * @param reader
     * @exception IOException
     * @exception SAXException
     * @exception ParserConfigurationException
     * @return ElementTransition
     */
    ElementTransition createElementTransitionWithContext(Reader reader) throws IOException, SAXException, ParserConfigurationException;

    /**
     * Creates a <code>TextTransition</code> by the Reader <code>reader</code>.
     *
     * @param reader
     * @exception IOException
     * @exception SAXException
     * @exception ParserConfigurationException
     * @return TextTransition
     */
    TextTransition createTextTransitionWithContext(Reader reader) throws IOException, SAXException, ParserConfigurationException;

    /**
     * Creates a <code>BranchingTransition</code> by the Reader <code>reader</code>.
     *
     * @param reader
     * @exception IOException
     * @exception SAXException
     * @exception ParserConfigurationException
     * @return BranchingTransition
     */
    BranchingTransition createBranchingTransitionWithContext(Reader reader) throws IOException, SAXException, ParserConfigurationException;

    /**
     * Creates a <code>MergingTransition</code> by the Reader <code>reader</code>.
     *
     * @param reader
     * @exception IOException
     * @exception SAXException
     * @exception ParserConfigurationException
     * @return MergingTransition
     */
    MergingTransition createMergingTransitionWithContext(Reader reader) throws IOException, SAXException, ParserConfigurationException;

    /**
     * Creates a <code>OneOrMoreAttributeTransition</code> by the Reader <code>reader</code>.
     *
     * @param reader
     * @exception IOException
     * @exception SAXException
     * @exception ParserConfigurationException
     * @return OneOrMoreAttributeTransition
     */
    OneOrMoreAttributeTransition createOneOrMoreAttributeTransitionWithContext(Reader reader) throws IOException, SAXException, ParserConfigurationException;

    /**
     * Creates a <code>NonExistentAttributeTransition</code> by the Reader <code>reader</code>.
     *
     * @param reader
     * @exception IOException
     * @exception SAXException
     * @exception ParserConfigurationException
     * @return NonExistentAttributeTransition
     */
    NonExistentAttributeTransition createNonExistentAttributeTransitionWithContext(Reader reader) throws IOException, SAXException, ParserConfigurationException;

    /**
     * Creates a <code>AtomicTransition</code> by the Reader <code>reader</code>.
     *
     * @param reader
     * @exception IOException
     * @exception SAXException
     * @exception ParserConfigurationException
     * @return AtomicTransition
     */
    AtomicTransition createAtomicTransitionWithContext(Reader reader) throws IOException, SAXException, ParserConfigurationException;

    /**
     * Creates a <code>Data</code> by the Reader <code>reader</code>.
     *
     * @param reader
     * @exception IOException
     * @exception SAXException
     * @exception ParserConfigurationException
     * @return Data
     */
    Data createDataWithContext(Reader reader) throws IOException, SAXException, ParserConfigurationException;

    /**
     * Creates a <code>Param</code> by the Reader <code>reader</code>.
     *
     * @param reader
     * @exception IOException
     * @exception SAXException
     * @exception ParserConfigurationException
     * @return Param
     */
    Param createParamWithContext(Reader reader) throws IOException, SAXException, ParserConfigurationException;

    /**
     * Creates a <code>Value</code> by the Reader <code>reader</code>.
     *
     * @param reader
     * @exception IOException
     * @exception SAXException
     * @exception ParserConfigurationException
     * @return Value
     */
    Value createValueWithContext(Reader reader) throws IOException, SAXException, ParserConfigurationException;

    /**
     * Creates a <code>ListTransition</code> by the Reader <code>reader</code>.
     *
     * @param reader
     * @exception IOException
     * @exception SAXException
     * @exception ParserConfigurationException
     * @return ListTransition
     */
    ListTransition createListTransitionWithContext(Reader reader) throws IOException, SAXException, ParserConfigurationException;

    /**
     * Creates a <code>BinaryTreeAutomaton</code>.
     *
     * @return BinaryTreeAutomaton
     */
    BinaryTreeAutomaton createBinaryTreeAutomaton();

    /**
     * Creates a <code>FinalTransition</code>.
     *
     * @return FinalTransition
     */
    FinalTransition createFinalTransition();

    /**
     * Creates a <code>StartTransition</code>.
     *
     * @return StartTransition
     */
    StartTransition createStartTransition();

    /**
     * Creates a <code>ElementTransition</code>.
     *
     * @return ElementTransition
     */
    ElementTransition createElementTransition();

    /**
     * Creates a <code>TextTransition</code>.
     *
     * @return TextTransition
     */
    TextTransition createTextTransition();

    /**
     * Creates a <code>BranchingTransition</code>.
     *
     * @return BranchingTransition
     */
    BranchingTransition createBranchingTransition();

    /**
     * Creates a <code>MergingTransition</code>.
     *
     * @return MergingTransition
     */
    MergingTransition createMergingTransition();

    /**
     * Creates a <code>OneOrMoreAttributeTransition</code>.
     *
     * @return OneOrMoreAttributeTransition
     */
    OneOrMoreAttributeTransition createOneOrMoreAttributeTransition();

    /**
     * Creates a <code>NonExistentAttributeTransition</code>.
     *
     * @return NonExistentAttributeTransition
     */
    NonExistentAttributeTransition createNonExistentAttributeTransition();

    /**
     * Creates a <code>AtomicTransition</code>.
     *
     * @return AtomicTransition
     */
    AtomicTransition createAtomicTransition();

    /**
     * Creates a <code>Data</code>.
     *
     * @return Data
     */
    Data createData();

    /**
     * Creates a <code>Param</code>.
     *
     * @return Param
     */
    Param createParam();

    /**
     * Creates a <code>Value</code>.
     *
     * @return Value
     */
    Value createValue();

    /**
     * Creates a <code>ListTransition</code>.
     *
     * @return ListTransition
     */
    ListTransition createListTransition();

    /**
     * Creates a <code>BinaryTreeAutomaton</code>.
     *
     * @return BinaryTreeAutomaton
     */
    BinaryTreeAutomaton createBinaryTreeAutomatonWithContext();

    /**
     * Creates a <code>FinalTransition</code>.
     *
     * @return FinalTransition
     */
    FinalTransition createFinalTransitionWithContext();

    /**
     * Creates a <code>StartTransition</code>.
     *
     * @return StartTransition
     */
    StartTransition createStartTransitionWithContext();

    /**
     * Creates a <code>ElementTransition</code>.
     *
     * @return ElementTransition
     */
    ElementTransition createElementTransitionWithContext();

    /**
     * Creates a <code>TextTransition</code>.
     *
     * @return TextTransition
     */
    TextTransition createTextTransitionWithContext();

    /**
     * Creates a <code>BranchingTransition</code>.
     *
     * @return BranchingTransition
     */
    BranchingTransition createBranchingTransitionWithContext();

    /**
     * Creates a <code>MergingTransition</code>.
     *
     * @return MergingTransition
     */
    MergingTransition createMergingTransitionWithContext();

    /**
     * Creates a <code>OneOrMoreAttributeTransition</code>.
     *
     * @return OneOrMoreAttributeTransition
     */
    OneOrMoreAttributeTransition createOneOrMoreAttributeTransitionWithContext();

    /**
     * Creates a <code>NonExistentAttributeTransition</code>.
     *
     * @return NonExistentAttributeTransition
     */
    NonExistentAttributeTransition createNonExistentAttributeTransitionWithContext();

    /**
     * Creates a <code>AtomicTransition</code>.
     *
     * @return AtomicTransition
     */
    AtomicTransition createAtomicTransitionWithContext();

    /**
     * Creates a <code>Data</code>.
     *
     * @return Data
     */
    Data createDataWithContext();

    /**
     * Creates a <code>Param</code>.
     *
     * @return Param
     */
    Param createParamWithContext();

    /**
     * Creates a <code>Value</code>.
     *
     * @return Value
     */
    Value createValueWithContext();

    /**
     * Creates a <code>ListTransition</code>.
     *
     * @return ListTransition
     */
    ListTransition createListTransitionWithContext();

    /**
     * Creates a <code>BinaryTreeAutomaton</code> by the Document <code>doc</code>.
     *
     * @param doc
     * @return BinaryTreeAutomaton
     */
    BinaryTreeAutomaton createBinaryTreeAutomaton(Document doc);

    /**
     * Creates a <code>FinalTransition</code> by the Document <code>doc</code>.
     *
     * @param doc
     * @return FinalTransition
     */
    FinalTransition createFinalTransition(Document doc);

    /**
     * Creates a <code>StartTransition</code> by the Document <code>doc</code>.
     *
     * @param doc
     * @return StartTransition
     */
    StartTransition createStartTransition(Document doc);

    /**
     * Creates a <code>ElementTransition</code> by the Document <code>doc</code>.
     *
     * @param doc
     * @return ElementTransition
     */
    ElementTransition createElementTransition(Document doc);

    /**
     * Creates a <code>TextTransition</code> by the Document <code>doc</code>.
     *
     * @param doc
     * @return TextTransition
     */
    TextTransition createTextTransition(Document doc);

    /**
     * Creates a <code>BranchingTransition</code> by the Document <code>doc</code>.
     *
     * @param doc
     * @return BranchingTransition
     */
    BranchingTransition createBranchingTransition(Document doc);

    /**
     * Creates a <code>MergingTransition</code> by the Document <code>doc</code>.
     *
     * @param doc
     * @return MergingTransition
     */
    MergingTransition createMergingTransition(Document doc);

    /**
     * Creates a <code>OneOrMoreAttributeTransition</code> by the Document <code>doc</code>.
     *
     * @param doc
     * @return OneOrMoreAttributeTransition
     */
    OneOrMoreAttributeTransition createOneOrMoreAttributeTransition(Document doc);

    /**
     * Creates a <code>NonExistentAttributeTransition</code> by the Document <code>doc</code>.
     *
     * @param doc
     * @return NonExistentAttributeTransition
     */
    NonExistentAttributeTransition createNonExistentAttributeTransition(Document doc);

    /**
     * Creates a <code>AtomicTransition</code> by the Document <code>doc</code>.
     *
     * @param doc
     * @return AtomicTransition
     */
    AtomicTransition createAtomicTransition(Document doc);

    /**
     * Creates a <code>Data</code> by the Document <code>doc</code>.
     *
     * @param doc
     * @return Data
     */
    Data createData(Document doc);

    /**
     * Creates a <code>Param</code> by the Document <code>doc</code>.
     *
     * @param doc
     * @return Param
     */
    Param createParam(Document doc);

    /**
     * Creates a <code>Value</code> by the Document <code>doc</code>.
     *
     * @param doc
     * @return Value
     */
    Value createValue(Document doc);

    /**
     * Creates a <code>ListTransition</code> by the Document <code>doc</code>.
     *
     * @param doc
     * @return ListTransition
     */
    ListTransition createListTransition(Document doc);

    /**
     * Creates a <code>BinaryTreeAutomaton</code> by the Document <code>doc</code>.
     *
     * @param doc
     * @return BinaryTreeAutomaton
     */
    BinaryTreeAutomaton createBinaryTreeAutomatonWithContext(Document doc);

    /**
     * Creates a <code>FinalTransition</code> by the Document <code>doc</code>.
     *
     * @param doc
     * @return FinalTransition
     */
    FinalTransition createFinalTransitionWithContext(Document doc);

    /**
     * Creates a <code>StartTransition</code> by the Document <code>doc</code>.
     *
     * @param doc
     * @return StartTransition
     */
    StartTransition createStartTransitionWithContext(Document doc);

    /**
     * Creates a <code>ElementTransition</code> by the Document <code>doc</code>.
     *
     * @param doc
     * @return ElementTransition
     */
    ElementTransition createElementTransitionWithContext(Document doc);

    /**
     * Creates a <code>TextTransition</code> by the Document <code>doc</code>.
     *
     * @param doc
     * @return TextTransition
     */
    TextTransition createTextTransitionWithContext(Document doc);

    /**
     * Creates a <code>BranchingTransition</code> by the Document <code>doc</code>.
     *
     * @param doc
     * @return BranchingTransition
     */
    BranchingTransition createBranchingTransitionWithContext(Document doc);

    /**
     * Creates a <code>MergingTransition</code> by the Document <code>doc</code>.
     *
     * @param doc
     * @return MergingTransition
     */
    MergingTransition createMergingTransitionWithContext(Document doc);

    /**
     * Creates a <code>OneOrMoreAttributeTransition</code> by the Document <code>doc</code>.
     *
     * @param doc
     * @return OneOrMoreAttributeTransition
     */
    OneOrMoreAttributeTransition createOneOrMoreAttributeTransitionWithContext(Document doc);

    /**
     * Creates a <code>NonExistentAttributeTransition</code> by the Document <code>doc</code>.
     *
     * @param doc
     * @return NonExistentAttributeTransition
     */
    NonExistentAttributeTransition createNonExistentAttributeTransitionWithContext(Document doc);

    /**
     * Creates a <code>AtomicTransition</code> by the Document <code>doc</code>.
     *
     * @param doc
     * @return AtomicTransition
     */
    AtomicTransition createAtomicTransitionWithContext(Document doc);

    /**
     * Creates a <code>Data</code> by the Document <code>doc</code>.
     *
     * @param doc
     * @return Data
     */
    Data createDataWithContext(Document doc);

    /**
     * Creates a <code>Param</code> by the Document <code>doc</code>.
     *
     * @param doc
     * @return Param
     */
    Param createParamWithContext(Document doc);

    /**
     * Creates a <code>Value</code> by the Document <code>doc</code>.
     *
     * @param doc
     * @return Value
     */
    Value createValueWithContext(Document doc);

    /**
     * Creates a <code>ListTransition</code> by the Document <code>doc</code>.
     *
     * @param doc
     * @return ListTransition
     */
    ListTransition createListTransitionWithContext(Document doc);

    /**
     * Creates a <code>BinaryTreeAutomaton</code> by the Element <code>element</code>.
     *
     * @param element
     * @return BinaryTreeAutomaton
     */
    BinaryTreeAutomaton createBinaryTreeAutomaton(Element element);

    /**
     * Creates a <code>FinalTransition</code> by the Element <code>element</code>.
     *
     * @param element
     * @return FinalTransition
     */
    FinalTransition createFinalTransition(Element element);

    /**
     * Creates a <code>StartTransition</code> by the Element <code>element</code>.
     *
     * @param element
     * @return StartTransition
     */
    StartTransition createStartTransition(Element element);

    /**
     * Creates a <code>ElementTransition</code> by the Element <code>element</code>.
     *
     * @param element
     * @return ElementTransition
     */
    ElementTransition createElementTransition(Element element);

    /**
     * Creates a <code>TextTransition</code> by the Element <code>element</code>.
     *
     * @param element
     * @return TextTransition
     */
    TextTransition createTextTransition(Element element);

    /**
     * Creates a <code>BranchingTransition</code> by the Element <code>element</code>.
     *
     * @param element
     * @return BranchingTransition
     */
    BranchingTransition createBranchingTransition(Element element);

    /**
     * Creates a <code>MergingTransition</code> by the Element <code>element</code>.
     *
     * @param element
     * @return MergingTransition
     */
    MergingTransition createMergingTransition(Element element);

    /**
     * Creates a <code>OneOrMoreAttributeTransition</code> by the Element <code>element</code>.
     *
     * @param element
     * @return OneOrMoreAttributeTransition
     */
    OneOrMoreAttributeTransition createOneOrMoreAttributeTransition(Element element);

    /**
     * Creates a <code>NonExistentAttributeTransition</code> by the Element <code>element</code>.
     *
     * @param element
     * @return NonExistentAttributeTransition
     */
    NonExistentAttributeTransition createNonExistentAttributeTransition(Element element);

    /**
     * Creates a <code>AtomicTransition</code> by the Element <code>element</code>.
     *
     * @param element
     * @return AtomicTransition
     */
    AtomicTransition createAtomicTransition(Element element);

    /**
     * Creates a <code>Data</code> by the Element <code>element</code>.
     *
     * @param element
     * @return Data
     */
    Data createData(Element element);

    /**
     * Creates a <code>Param</code> by the Element <code>element</code>.
     *
     * @param element
     * @return Param
     */
    Param createParam(Element element);

    /**
     * Creates a <code>Value</code> by the Element <code>element</code>.
     *
     * @param element
     * @return Value
     */
    Value createValue(Element element);

    /**
     * Creates a <code>ListTransition</code> by the Element <code>element</code>.
     *
     * @param element
     * @return ListTransition
     */
    ListTransition createListTransition(Element element);

    /**
     * Creates a <code>BinaryTreeAutomaton</code> by the Element <code>element</code>.
     *
     * @param element
     * @return BinaryTreeAutomaton
     */
    BinaryTreeAutomaton createBinaryTreeAutomatonWithContext(Element element);

    /**
     * Creates a <code>FinalTransition</code> by the Element <code>element</code>.
     *
     * @param element
     * @return FinalTransition
     */
    FinalTransition createFinalTransitionWithContext(Element element);

    /**
     * Creates a <code>StartTransition</code> by the Element <code>element</code>.
     *
     * @param element
     * @return StartTransition
     */
    StartTransition createStartTransitionWithContext(Element element);

    /**
     * Creates a <code>ElementTransition</code> by the Element <code>element</code>.
     *
     * @param element
     * @return ElementTransition
     */
    ElementTransition createElementTransitionWithContext(Element element);

    /**
     * Creates a <code>TextTransition</code> by the Element <code>element</code>.
     *
     * @param element
     * @return TextTransition
     */
    TextTransition createTextTransitionWithContext(Element element);

    /**
     * Creates a <code>BranchingTransition</code> by the Element <code>element</code>.
     *
     * @param element
     * @return BranchingTransition
     */
    BranchingTransition createBranchingTransitionWithContext(Element element);

    /**
     * Creates a <code>MergingTransition</code> by the Element <code>element</code>.
     *
     * @param element
     * @return MergingTransition
     */
    MergingTransition createMergingTransitionWithContext(Element element);

    /**
     * Creates a <code>OneOrMoreAttributeTransition</code> by the Element <code>element</code>.
     *
     * @param element
     * @return OneOrMoreAttributeTransition
     */
    OneOrMoreAttributeTransition createOneOrMoreAttributeTransitionWithContext(Element element);

    /**
     * Creates a <code>NonExistentAttributeTransition</code> by the Element <code>element</code>.
     *
     * @param element
     * @return NonExistentAttributeTransition
     */
    NonExistentAttributeTransition createNonExistentAttributeTransitionWithContext(Element element);

    /**
     * Creates a <code>AtomicTransition</code> by the Element <code>element</code>.
     *
     * @param element
     * @return AtomicTransition
     */
    AtomicTransition createAtomicTransitionWithContext(Element element);

    /**
     * Creates a <code>Data</code> by the Element <code>element</code>.
     *
     * @param element
     * @return Data
     */
    Data createDataWithContext(Element element);

    /**
     * Creates a <code>Param</code> by the Element <code>element</code>.
     *
     * @param element
     * @return Param
     */
    Param createParamWithContext(Element element);

    /**
     * Creates a <code>Value</code> by the Element <code>element</code>.
     *
     * @param element
     * @return Value
     */
    Value createValueWithContext(Element element);

    /**
     * Creates a <code>ListTransition</code> by the Element <code>element</code>.
     *
     * @param element
     * @return ListTransition
     */
    ListTransition createListTransitionWithContext(Element element);

    /**
     * Creates a <code>BinaryTreeAutomaton</code> by the Stack <code>stack</code>.
     * This mehtod is supposed to be used internally
     * by the Relaxer system.
     *
     * @param stack
     * @return BinaryTreeAutomaton
     */
    BinaryTreeAutomaton createBinaryTreeAutomaton(RStack stack);

    /**
     * Creates a <code>FinalTransition</code> by the Stack <code>stack</code>.
     * This mehtod is supposed to be used internally
     * by the Relaxer system.
     *
     * @param stack
     * @return FinalTransition
     */
    FinalTransition createFinalTransition(RStack stack);

    /**
     * Creates a <code>StartTransition</code> by the Stack <code>stack</code>.
     * This mehtod is supposed to be used internally
     * by the Relaxer system.
     *
     * @param stack
     * @return StartTransition
     */
    StartTransition createStartTransition(RStack stack);

    /**
     * Creates a <code>ElementTransition</code> by the Stack <code>stack</code>.
     * This mehtod is supposed to be used internally
     * by the Relaxer system.
     *
     * @param stack
     * @return ElementTransition
     */
    ElementTransition createElementTransition(RStack stack);

    /**
     * Creates a <code>TextTransition</code> by the Stack <code>stack</code>.
     * This mehtod is supposed to be used internally
     * by the Relaxer system.
     *
     * @param stack
     * @return TextTransition
     */
    TextTransition createTextTransition(RStack stack);

    /**
     * Creates a <code>BranchingTransition</code> by the Stack <code>stack</code>.
     * This mehtod is supposed to be used internally
     * by the Relaxer system.
     *
     * @param stack
     * @return BranchingTransition
     */
    BranchingTransition createBranchingTransition(RStack stack);

    /**
     * Creates a <code>MergingTransition</code> by the Stack <code>stack</code>.
     * This mehtod is supposed to be used internally
     * by the Relaxer system.
     *
     * @param stack
     * @return MergingTransition
     */
    MergingTransition createMergingTransition(RStack stack);

    /**
     * Creates a <code>OneOrMoreAttributeTransition</code> by the Stack <code>stack</code>.
     * This mehtod is supposed to be used internally
     * by the Relaxer system.
     *
     * @param stack
     * @return OneOrMoreAttributeTransition
     */
    OneOrMoreAttributeTransition createOneOrMoreAttributeTransition(RStack stack);

    /**
     * Creates a <code>NonExistentAttributeTransition</code> by the Stack <code>stack</code>.
     * This mehtod is supposed to be used internally
     * by the Relaxer system.
     *
     * @param stack
     * @return NonExistentAttributeTransition
     */
    NonExistentAttributeTransition createNonExistentAttributeTransition(RStack stack);

    /**
     * Creates a <code>AtomicTransition</code> by the Stack <code>stack</code>.
     * This mehtod is supposed to be used internally
     * by the Relaxer system.
     *
     * @param stack
     * @return AtomicTransition
     */
    AtomicTransition createAtomicTransition(RStack stack);

    /**
     * Creates a <code>Data</code> by the Stack <code>stack</code>.
     * This mehtod is supposed to be used internally
     * by the Relaxer system.
     *
     * @param stack
     * @return Data
     */
    Data createData(RStack stack);

    /**
     * Creates a <code>Param</code> by the Stack <code>stack</code>.
     * This mehtod is supposed to be used internally
     * by the Relaxer system.
     *
     * @param stack
     * @return Param
     */
    Param createParam(RStack stack);

    /**
     * Creates a <code>Value</code> by the Stack <code>stack</code>.
     * This mehtod is supposed to be used internally
     * by the Relaxer system.
     *
     * @param stack
     * @return Value
     */
    Value createValue(RStack stack);

    /**
     * Creates a <code>ListTransition</code> by the Stack <code>stack</code>.
     * This mehtod is supposed to be used internally
     * by the Relaxer system.
     *
     * @param stack
     * @return ListTransition
     */
    ListTransition createListTransition(RStack stack);

    /**
     * Creates a <code>BinaryTreeAutomaton</code> by the Stack <code>stack</code>.
     * This mehtod is supposed to be used internally
     * by the Relaxer system.
     *
     * @param stack
     * @return BinaryTreeAutomaton
     */
    BinaryTreeAutomaton createBinaryTreeAutomatonWithContext(RStack stack);

    /**
     * Creates a <code>FinalTransition</code> by the Stack <code>stack</code>.
     * This mehtod is supposed to be used internally
     * by the Relaxer system.
     *
     * @param stack
     * @return FinalTransition
     */
    FinalTransition createFinalTransitionWithContext(RStack stack);

    /**
     * Creates a <code>StartTransition</code> by the Stack <code>stack</code>.
     * This mehtod is supposed to be used internally
     * by the Relaxer system.
     *
     * @param stack
     * @return StartTransition
     */
    StartTransition createStartTransitionWithContext(RStack stack);

    /**
     * Creates a <code>ElementTransition</code> by the Stack <code>stack</code>.
     * This mehtod is supposed to be used internally
     * by the Relaxer system.
     *
     * @param stack
     * @return ElementTransition
     */
    ElementTransition createElementTransitionWithContext(RStack stack);

    /**
     * Creates a <code>TextTransition</code> by the Stack <code>stack</code>.
     * This mehtod is supposed to be used internally
     * by the Relaxer system.
     *
     * @param stack
     * @return TextTransition
     */
    TextTransition createTextTransitionWithContext(RStack stack);

    /**
     * Creates a <code>BranchingTransition</code> by the Stack <code>stack</code>.
     * This mehtod is supposed to be used internally
     * by the Relaxer system.
     *
     * @param stack
     * @return BranchingTransition
     */
    BranchingTransition createBranchingTransitionWithContext(RStack stack);

    /**
     * Creates a <code>MergingTransition</code> by the Stack <code>stack</code>.
     * This mehtod is supposed to be used internally
     * by the Relaxer system.
     *
     * @param stack
     * @return MergingTransition
     */
    MergingTransition createMergingTransitionWithContext(RStack stack);

    /**
     * Creates a <code>OneOrMoreAttributeTransition</code> by the Stack <code>stack</code>.
     * This mehtod is supposed to be used internally
     * by the Relaxer system.
     *
     * @param stack
     * @return OneOrMoreAttributeTransition
     */
    OneOrMoreAttributeTransition createOneOrMoreAttributeTransitionWithContext(RStack stack);

    /**
     * Creates a <code>NonExistentAttributeTransition</code> by the Stack <code>stack</code>.
     * This mehtod is supposed to be used internally
     * by the Relaxer system.
     *
     * @param stack
     * @return NonExistentAttributeTransition
     */
    NonExistentAttributeTransition createNonExistentAttributeTransitionWithContext(RStack stack);

    /**
     * Creates a <code>AtomicTransition</code> by the Stack <code>stack</code>.
     * This mehtod is supposed to be used internally
     * by the Relaxer system.
     *
     * @param stack
     * @return AtomicTransition
     */
    AtomicTransition createAtomicTransitionWithContext(RStack stack);

    /**
     * Creates a <code>Data</code> by the Stack <code>stack</code>.
     * This mehtod is supposed to be used internally
     * by the Relaxer system.
     *
     * @param stack
     * @return Data
     */
    Data createDataWithContext(RStack stack);

    /**
     * Creates a <code>Param</code> by the Stack <code>stack</code>.
     * This mehtod is supposed to be used internally
     * by the Relaxer system.
     *
     * @param stack
     * @return Param
     */
    Param createParamWithContext(RStack stack);

    /**
     * Creates a <code>Value</code> by the Stack <code>stack</code>.
     * This mehtod is supposed to be used internally
     * by the Relaxer system.
     *
     * @param stack
     * @return Value
     */
    Value createValueWithContext(RStack stack);

    /**
     * Creates a <code>ListTransition</code> by the Stack <code>stack</code>.
     * This mehtod is supposed to be used internally
     * by the Relaxer system.
     *
     * @param stack
     * @return ListTransition
     */
    ListTransition createListTransitionWithContext(RStack stack);

    /**
     * Creates a <code>RContext</code>.
     *
     * @return RContext
     */
    RContext createRContext();
}
